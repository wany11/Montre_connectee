// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.1
// LVGL version: 8.3.11
// Project name: TempSensor

#ifndef _TEMPSENSOR_UI_H
#define _TEMPSENSOR_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"

#include "ui_helpers.h"
#include "components/ui_comp.h"
#include "components/ui_comp_hook.h"
#include "ui_events.h"


// SCREEN: ui_Screen2
void ui_Screen2_screen_init(void);
extern lv_obj_t * ui_Screen2;
extern lv_obj_t * ui_Clock_Group;
extern lv_obj_t * ui_hour;
extern lv_obj_t * ui_min;
extern lv_obj_t * ui_sec;
extern lv_obj_t * ui_ThreeH;
extern lv_obj_t * ui_SixH;
extern lv_obj_t * ui_NineH;
extern lv_obj_t * ui_OneH;
extern lv_obj_t * ui_TwoH;
extern lv_obj_t * ui_FourH;
extern lv_obj_t * ui_FiveH;
extern lv_obj_t * ui_SevenH;
extern lv_obj_t * ui_EightH;
extern lv_obj_t * ui_TenH;
extern lv_obj_t * ui_ElevH;
extern lv_obj_t * ui_TwelveH;
// CUSTOM VARIABLES
extern lv_obj_t * uic_Clock_Group;

// SCREEN: ui_Screen3
void ui_Screen3_screen_init(void);
extern lv_obj_t * ui_Screen3;
extern lv_obj_t * ui_Clock_Group2;
extern lv_obj_t * ui_HourLabel;
extern lv_obj_t * ui_LabelHumi;
extern lv_obj_t * ui_LabelTemp;
extern lv_obj_t * ui_Image1;
extern lv_obj_t * ui_Image2;
extern lv_obj_t * ui_Image3;
extern lv_obj_t * ui_Image4;
// CUSTOM VARIABLES

// SCREEN: ui_Screen4
void ui_Screen4_screen_init(void);
extern lv_obj_t * ui_Screen4;
extern lv_obj_t * ui_Clock_Group1;
extern lv_obj_t * ui_Accelerometre;
extern lv_obj_t * ui_accel_x;
extern lv_obj_t * ui_accel_y;
extern lv_obj_t * ui_accel_z;
extern lv_obj_t * ui_Gyroscope;
extern lv_obj_t * ui_gyro_x;
extern lv_obj_t * ui_gyro_y;
extern lv_obj_t * ui_gyro_z;
// CUSTOM VARIABLES

// SCREEN: ui_Screen5
void ui_Screen5_screen_init(void);
extern lv_obj_t * ui_Screen5;
extern lv_obj_t * ui_Clock_Group3;
extern lv_obj_t * ui_Magnetisme;
extern lv_obj_t * ui_mag_x;
extern lv_obj_t * ui_mag_y;
extern lv_obj_t * ui_mag_z;
extern lv_obj_t * ui_compass;
// CUSTOM VARIABLES

// SCREEN: ui_Screen6
void ui_Screen6_screen_init(void);
extern lv_obj_t * ui_Screen6;
extern lv_obj_t * ui_Clock_Group4;
extern lv_obj_t * ui_Chronometre;
extern lv_obj_t * ui_chronometreActi;
extern lv_obj_t * ui_distance;
extern lv_obj_t * ui_test;
// CUSTOM VARIABLES

// EVENTS

void ui_event____initial_actions0(lv_event_t * e);
extern lv_obj_t * ui____initial_actions0;

// IMAGES AND IMAGE SETS
LV_IMG_DECLARE(ui_img_1780325426);    // assets/Capture d'Ã©cran 2025-03-21 113557.png
LV_IMG_DECLARE(ui_img_clockwise_hour_png);    // assets/clockwise_hour.png
LV_IMG_DECLARE(ui_img_clockwise_min_png);    // assets/clockwise_min.png
LV_IMG_DECLARE(ui_img_clockwise_sec_png);    // assets/clockwise_sec.png
LV_IMG_DECLARE(ui_img_weather_sun_cloud_png);    // assets/weather_sun_cloud.png
LV_IMG_DECLARE(ui_img_weather_sun_png);    // assets/weather_sun.png
LV_IMG_DECLARE(ui_img_weather_cloud_fog_png);    // assets/weather_cloud_fog.png
LV_IMG_DECLARE(ui_img_weather_cloud_png);    // assets/weather_cloud.png

// UI INIT
void ui_init(void);
void sec_Animation(lv_obj_t * TargetObject, int angle);
void min_Animation(lv_obj_t * TargetObject, int angle);
void hour_Animation(lv_obj_t * TargetObject, int angle);
void init_clock_positions(void);
/**
 * @brief Entry function for the UI thread
 */
void ui_thread_entry(void *p1, void *p2, void *p3);

/**
 * @brief Process and display temperature from the message queue
 */
void process_queue(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
